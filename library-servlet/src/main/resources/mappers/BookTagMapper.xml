<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sndshun.library.mapper.BookTagMapper">

    <resultMap type="com.sndshun.library.entity.BookTag" id="BookTagMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="tagName" column="tag_name" jdbcType="VARCHAR"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="tagState" column="tag_state" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BookTagVoMap" type="com.sndshun.library.vo.BookTagVo" extends="BookTagMap">
        <result property="createName" column="createName" jdbcType="VARCHAR"/>
        <result property="updateName" column="updateName" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BookTagMap">
        select id,
               tag_name,
               update_by,
               create_by,
               update_time,
               create_time,
               tag_state
        from library.book_tag
        where id = #{id}
    </select>

    <!--查询总量-->
    <select id="queryCount" resultType="int">
        select count(*)
        from library.book_tag t
        left join library.sys_user u on u.id=t.create_by
        <where>
            t.id > -1
            <if test="vo.tagName!=null and vo.tagName!=''">
                and t.tag_name like concat('%',#{vo.tagName},'%')
            </if>
            <if test="vo.createName!=null and vo.createName!=''">
                and u.name like concat('%',#{vo.createName},'%')
            </if>
            <if test="vo.tagState!=null">
                and t.tag_state=#{vo.tagState}
            </if>
        </where>
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BookTagVoMap">
        select t.id,
        t.tag_name,
        t.update_time,
        t.create_time,
        t.tag_state,
        u.name createName,
        u2.name updateName
        from library.book_tag t
        left join library.sys_user u on u.id=t.create_by
        left join library.sys_user u2 on u2.id=t.update_by
        <where>
            <if test="vo.tagName!=null and vo.tagName!=''">
                and t.tag_name like concat('%',#{vo.tagName},'%')
            </if>
            <if test="vo.createName!=null and vo.createName!=''">
                and u.name like concat('%',#{vo.createName},'%')
            </if>
            <if test="vo.tagState!=null">
                and t.tag_state=#{vo.tagState}
            </if>
        </where>
        order by t.id desc
        limit #{ew.start}, #{ew.size}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BookTagMap">
        select
        id, tag_name, update_by, create_by, update_time, create_time, tag_state
        from library.book_tag
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="tagName != null and tagName != ''">
                and tag_name like concat('%',#{tagName},'%')
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="tagState != null">
                and tag_state = #{tagState}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into library.book_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagName != null and tagName != ''">
                tag_name,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="tagState != null">
                tag_state,
            </if>

        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagName != null and tagName != ''">
                #{tagName},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="tagState != null">
                #{tagState},
            </if>

        </trim>
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into library.book_tag(tag_name, update_by, create_by, update_time, create_time, tag_state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tagName}, #{entity.updateBy}, #{entity.createBy}, #{entity.updateTime}, #{entity.createTime},
            #{entity.tagState})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into library.book_tag(tag_name, update_by, create_by, update_time, create_time, tag_state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tagName}, #{entity.updateBy}, #{entity.createBy}, #{entity.updateTime}, #{entity.createTime},
            #{entity.tagState})
        </foreach>
        on duplicate key update
        tag_name = values(tag_name) , update_by = values(update_by) , create_by = values(create_by) , update_time =
        values(update_time) , create_time = values(create_time) , tag_state = values(tag_state)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update library.book_tag
        <set>
            <if test="tagName != null and tagName != ''">
                tag_name = #{tagName},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="tagState != null">
                tag_state = #{tagState},
            </if>

        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from library.book_tag
        where id = #{id}
    </delete>

    <!--通过主键批量删除-->
    <delete id="deleteBatch">
        delete
        from library.book_tag
        where id in
        <foreach collection="entities" item="entity" separator="," open="(" close=")">
            #{entity}
        </foreach>
    </delete>

</mapper>

