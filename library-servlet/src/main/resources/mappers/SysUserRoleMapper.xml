<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sndshun.library.mapper.SysUserRoleMapper">

    <resultMap type="com.sndshun.library.entity.SysUserRole" id="SysUserRoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SysUserRoleMap">
        select id,
               user_id,
               role_id,
               update_time,
               create_time,
               update_by,
               create_by
        from library.sys_user_role
        where id = #{id}
    </select>

    <!--查询总量-->
    <select id="queryCount" resultType="int">
        select count(*)
        from library.sys_user_role
        where id > -1
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysUserRoleMap">
        select id,
               user_id,
               role_id,
               update_time,
               create_time,
               update_by,
               create_by
        from library.sys_user_role
        limit #{ew.start}, #{ew.size}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SysUserRoleMap">
        select
        id, user_id, role_id, update_time, create_time, update_by, create_by
        from library.sys_user_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into library.sys_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into library.sys_user_role(user_id, role_id, update_time, create_time, update_by, create_by)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.roleId}, #{entity.updateTime}, #{entity.createTime}, #{entity.updateBy},
            #{entity.createBy})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into library.sys_user_role(user_id, role_id, update_time, create_time, update_by, create_by)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.roleId}, #{entity.updateTime}, #{entity.createTime}, #{entity.updateBy},
            #{entity.createBy})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , role_id = values(role_id) , update_time = values(update_time) , create_time =
        values(create_time) , update_by = values(update_by) , create_by = values(create_by)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update library.sys_user_role
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from library.sys_user_role
        where id = #{id}
    </delete>

</mapper>

