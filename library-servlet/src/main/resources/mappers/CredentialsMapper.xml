<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sndshun.library.mapper.CredentialsMapper">

    <resultMap type="com.sndshun.library.entity.Credentials" id="CredentialsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="credentialsName" column="credentials_name" jdbcType="VARCHAR"/>
        <result property="credentialsPrice" column="credentials_price" jdbcType="NUMERIC"/>
        <result property="borrowingCount" column="borrowing_count" jdbcType="INTEGER"/>
        <result property="borrowingTime" column="borrowing_time" jdbcType="INTEGER"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CredentialsMap">
        select id,
               credentials_name,
               credentials_price,
               borrowing_count,
               borrowing_time,
               update_by,
               update_time,
               create_by,
               create_time
        from library.credentials
        where id = #{id}
    </select>

    <!--查询总量-->
    <select id="queryCount" resultType="int">
        select count(*)
        from library.credentials
        where id > -1
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CredentialsMap">
        select id,
               credentials_name,
               credentials_price,
               borrowing_count,
               borrowing_time,
               update_by,
               update_time,
               create_by,
               create_time
        from library.credentials limit #{ew.start}, #{ew.size}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CredentialsMap">
        select
        id, credentials_name, credentials_price, borrowing_count, borrowing_time, update_by, update_time, create_by,
        create_time
        from library.credentials
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="credentialsName != null and credentialsName != ''">
                and credentials_name = #{credentialsName}
            </if>
            <if test="credentialsPrice != null">
                and credentials_price = #{credentialsPrice}
            </if>
            <if test="borrowingCount != null">
                and borrowing_count = #{borrowingCount}
            </if>
            <if test="borrowingTime != null">
                and borrowing_time = #{borrowingTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into library.credentials
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="credentialsName != null and credentialsName != ''">
                credentials_name,
            </if>
            <if test="credentialsPrice != null">
                credentials_price,
            </if>
            <if test="borrowingCount != null">
                borrowing_count,
            </if>
            <if test="borrowingTime != null">
                borrowing_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="credentialsName != null and credentialsName != ''">
                #{credentialsName},
            </if>
            <if test="credentialsPrice != null">
                #{credentialsPrice},
            </if>
            <if test="borrowingCount != null">
                #{borrowingCount},
            </if>
            <if test="borrowingTime != null">
                #{borrowingTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into library.credentials(credentials_name, credentials_price, borrowing_count, borrowing_time, update_by,
        update_time, create_by, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.credentialsName}, #{entity.credentialsPrice}, #{entity.borrowingCount}, #{entity.borrowingTime},
            #{entity.updateBy}, #{entity.updateTime}, #{entity.createBy}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into library.credentials(credentials_name, credentials_price, borrowing_count, borrowing_time, update_by,
        update_time, create_by, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.credentialsName}, #{entity.credentialsPrice}, #{entity.borrowingCount}, #{entity.borrowingTime},
            #{entity.updateBy}, #{entity.updateTime}, #{entity.createBy}, #{entity.createTime})
        </foreach>
        on duplicate key update
        credentials_name = values(credentials_name) , credentials_price = values(credentials_price) , borrowing_count =
        values(borrowing_count) , borrowing_time = values(borrowing_time) , update_by = values(update_by) , update_time
        = values(update_time) , create_by = values(create_by) , create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update library.credentials
        <set>
            <if test="credentialsName != null and credentialsName != ''">
                credentials_name = #{credentialsName},
            </if>
            <if test="credentialsPrice != null">
                credentials_price = #{credentialsPrice},
            </if>
            <if test="borrowingCount != null">
                borrowing_count = #{borrowingCount},
            </if>
            <if test="borrowingTime != null">
                borrowing_time = #{borrowingTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from library.credentials
        where id = #{id}
    </delete>
    <!--通过主键批量删除-->
    <delete id="deleteBatch">
        delete
        from library.credentials
        where id in
        <foreach collection="entities" item="entity" separator="," open="(" close=")">
            #{entity}
        </foreach>
    </delete>

</mapper>

